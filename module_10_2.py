# Модуль 10.2. "Потоки на классах"
# ===========================================
'''Задача "За честь и отвагу!"'''

# Импортируем модули
from threading import Thread
from time import sleep

# Создать класс Knight, наследованный от Thread,
# объекты которого будут обладать следующими свойствами:
# Атрибут name - имя рыцаря. (str)
# Атрибут power - сила рыцаря. (int)

class Knight(Thread):
    def __init__(self, name:str, power:int):
        super().__init__()
        self.name = name
        self.power = power

    # Метод run, в котором рыцарь будет сражаться с врагами
    def run(self):
        # При запуске потока должна выводится надпись "<Имя рыцаря>, на нас напали!".
        print(f'{self.name}, на нас напали!')
        # Рыцарь сражается до тех пор, пока не повергнет всех врагов (у всех потоков их 100).
        count_power = 100
        # Кол-во дней сражения
        number_days = 0

        for i in range(count_power):
            if count_power > 0:
                count_power -= self.power # В процессе сражения количество врагов уменьшается
                                            # на power текущего рыцаря.
                # По прошествию 1 дня сражения (1 секунды)
                number_days += 1
                sleep(1)
                # выводится строка "<Имя рыцаря> сражается <кол-во дней>...,
                # осталось <кол-во воинов> воинов."
                print(f'{self.name} сражается {number_days} день(дня)..., осталось {count_power} воинов.')
                # После победы над всеми врагами выводится надпись
                # "<Имя рыцаря> одержал победу спустя <кол-во дней> дней(дня)!"
                if count_power <= 0:
                    print(f'{self.name} одержал победу спустя {number_days} дней(дня)!')

# =====================================================================================

# Создание потоков
first_knight = Knight('Sir Lancelot', 10)
second_knight = Knight("Sir Galahad", 20)

# Запуск потоков и остановка текущего
first_knight.start()
second_knight.start()

# Остановка текущего потока
first_knight.join()
second_knight.join()

# Вывод строки об окончании сражения
print('Все битвы закончились!')
#=========================================================